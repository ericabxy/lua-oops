--- class module with new and init functions
-- {modname}.new is used both to create new objects and new subclasses.
-- {modname}.init is used to create new objects and initialize them.
-- This techniques uses only two functions on the module table, with
-- "init" calling "new" to handle the object creation. "init" is a
-- familiar term from Python, but it is unusual to use it to create
-- new objects.
-- @classmod {modname}
local {modname} = {{}}

-- class table
local {classname} = {{}}

-- constructor method
function {classname}:{classname}()
end

-- return a new object of class {classname}
-- usage: abc = {modname}.new({a = 1, b = 2, c = 3})
-- usage: local Subclass = {modname}.new{a = 1, b = 2, c = 3}
-- @param[option] o table of initial fields
function {modname}.new(o)
  local self = o or {{}}
  setmetatable(self, {{ __index = {classname} }})
  return self
end

-- return an initialized object of class {classname}
-- usage: abc = {modname}.init(a, b, c)
function {modname}.init(...)
  local self = {modname}.new()
  self:{classname}(...)
  return self
end

return {modname}
